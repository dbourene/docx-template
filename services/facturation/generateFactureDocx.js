// services/facturation/generateFactureDocx.js

import fs from 'fs/promises';
import { createReport } from 'docx-templates';

/**
 * G√©n√®re le fichier DOCX de facture √† partir du template et des donn√©es
 * @param {string} templateFile - Chemin vers le template DOCX t√©l√©charg√© localement
 * @param {{ templateData: Object, numero_acc: string }} factureData - Donn√©es g√©n√©r√©es (templateData + numero_acc)
 * @param {string} outputDocx - Chemin du fichier de sortie .docx
 */
export async function generateFactureDocx(templateFile, factureData, outputDocx) {
  try {
    console.log('üìù G√©n√©ration du DOCX de facture...');

    // 1Ô∏è‚É£ Lire le template depuis le disque
    const template = await fs.readFile(templateFile);

    // 2Ô∏è‚É£ G√©n√©rer le rapport DOCX avec docx-templates
    const report = await createReport({
      template,
      data: factureData.templateData, // ‚ö° On utilise seulement templateData ici
      cmdDelimiter: ['<<', '>>'],
      processLineBreaks: true,
    });

    // 3Ô∏è‚É£ √âcrire le r√©sultat dans un fichier temporaire
    await fs.writeFile(outputDocx, report);

    console.log(`‚úÖ Facture DOCX g√©n√©r√©e : ${outputDocx}`);
    return outputDocx;
  } catch (error) {
    console.error('‚ùå Erreur lors de la g√©n√©ration du DOCX de facture :', error);
    throw error;
  }
}
